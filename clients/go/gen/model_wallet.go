/*
 * M2M Gateway API
 *
 * The M2M Gateway API is for communication by 3rd party servers for automated tasks in the Framework
 *
 * API version: 0.1
 * Contact: support@uxly.software
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// A Wallet is a custodial \"hot\" wallet controlled by 1Shot. It is a normal Externally Owned Account, and can be used like any normal wallet. 1Shot executes Contract Methods via a Wallet, which must at least hold some gas token for the chain. Wallets are linked to a particular chain for safety and ease of use; technically an EOA address can be used on any EVM chain but the potential for confusion is greater than the utility provided. You may define as many Wallets as you need. Each Contract Method is configured with a default Wallet but this can be overridden. The Contract Method will be submitted via that Wallet and paid for from that Wallet. Wallets owned by a Business are the only ones used by 1Shot, but wallets owned by an individual User may be supported in the future.
type Wallet struct {
	Id             string `json:"id"`
	AccountAddress string `json:"accountAddress"`
	BusinessId     string `json:"businessId"`
	// The User ID of the person that owns this Wallet. Admin wallets will not have this value. A wallet will have either a user ID or a business ID.
	UserId  string  `json:"userId"`
	ChainId *EChain `json:"chainId"`
	// The name of the wallet.
	Name string `json:"name"`
	// A description of the wallet, can be used to describe its purpose.
	Description string `json:"description"`
	// Whether or not the wallet is an admin wallet, used for internal purposes.
	IsAdmin               bool                   `json:"isAdmin"`
	AccountBalanceDetails *AccountBalanceDetails `json:"accountBalanceDetails,omitempty"`
	Updated               float64                `json:"updated"`
	Created               float64                `json:"created"`
}
